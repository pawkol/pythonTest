pipeline {
    agent { label 'linux' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                script {
                    // Uruchomienie Mavena
                    sh 'mvn clean install'
                }
            }
        }
        stage('Dependency Check') {
            steps {
                script {
                    // Uruchomienie Dependency Check
                    sh 'mvn dependency-check:check'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    // UÅ¼ycie SonarQube Scanner
                    def scannerHome = tool 'SonarQubeScanner'
                    echo "SonarQube Scanner installation directory: ${scannerHome}"

                    withSonarQubeEnv('sq1') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=python_project -Dsonar.sources=. -Dsonar.language=py -Dsonar.sourceEncoding=UTF-8"
                    }
                }
            }
        }
    }
}



